Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.7/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.7/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
X_new = SelectKBest(mutual_info_classif, k=100).fit_transform(TFIDF, y)
X_new.shape
------------------

[0;31m[0m
[0;31mValueError[0mTraceback (most recent call last)
[0;32m<ipython-input-42-5d48cc762874>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mX_new[0m [0;34m=[0m [0mSelectKBest[0m[0;34m([0m[0mmutual_info_classif[0m[0;34m,[0m [0mk[0m[0;34m=[0m[0;36m100[0m[0;34m)[0m[0;34m.[0m[0mfit_transform[0m[0;34m([0m[0mTFIDF[0m[0;34m,[0m [0my[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0mX_new[0m[0;34m.[0m[0mshape[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/base.py[0m in [0;36mfit_transform[0;34m(self, X, y, **fit_params)[0m
[1;32m    853[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    854[0m             [0;31m# fit method of arity 2 (supervised transformation)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 855[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mfit[0m[0;34m([0m[0mX[0m[0;34m,[0m [0my[0m[0;34m,[0m [0;34m**[0m[0mfit_params[0m[0;34m)[0m[0;34m.[0m[0mtransform[0m[0;34m([0m[0mX[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    856[0m [0;34m[0m[0m
[1;32m    857[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/feature_selection/_univariate_selection.py[0m in [0;36mfit[0;34m(self, X, y)[0m
[1;32m    396[0m         """
[1;32m    397[0m         X, y = self._validate_data(
[0;32m--> 398[0;31m             [0mX[0m[0;34m,[0m [0my[0m[0;34m,[0m [0maccept_sparse[0m[0;34m=[0m[0;34m[[0m[0;34m"csr"[0m[0;34m,[0m [0;34m"csc"[0m[0;34m][0m[0;34m,[0m [0mmulti_output[0m[0;34m=[0m[0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    399[0m         )
[1;32m    400[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/base.py[0m in [0;36m_validate_data[0;34m(self, X, y, reset, validate_separately, **check_params)[0m
[1;32m    579[0m                 [0my[0m [0;34m=[0m [0mcheck_array[0m[0;34m([0m[0my[0m[0;34m,[0m [0;34m**[0m[0mcheck_y_params[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    580[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 581[0;31m                 [0mX[0m[0;34m,[0m [0my[0m [0;34m=[0m [0mcheck_X_y[0m[0;34m([0m[0mX[0m[0;34m,[0m [0my[0m[0;34m,[0m [0;34m**[0m[0mcheck_params[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    582[0m             [0mout[0m [0;34m=[0m [0mX[0m[0;34m,[0m [0my[0m[0;34m[0m[0;34m[0m[0m
[1;32m    583[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py[0m in [0;36mcheck_X_y[0;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)[0m
[1;32m    977[0m     )
[1;32m    978[0m [0;34m[0m[0m
[0;32m--> 979[0;31m     [0my[0m [0;34m=[0m [0m_check_y[0m[0;34m([0m[0my[0m[0;34m,[0m [0mmulti_output[0m[0;34m=[0m[0mmulti_output[0m[0;34m,[0m [0my_numeric[0m[0;34m=[0m[0my_numeric[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    980[0m [0;34m[0m[0m
[1;32m    981[0m     [0mcheck_consistent_length[0m[0;34m([0m[0mX[0m[0;34m,[0m [0my[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py[0m in [0;36m_check_y[0;34m(y, multi_output, y_numeric)[0m
[1;32m    988[0m     [0;32mif[0m [0mmulti_output[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    989[0m         y = check_array(
[0;32m--> 990[0;31m             [0my[0m[0;34m,[0m [0maccept_sparse[0m[0;34m=[0m[0;34m"csr"[0m[0;34m,[0m [0mforce_all_finite[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m [0mensure_2d[0m[0;34m=[0m[0;32mFalse[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    991[0m         )
[1;32m    992[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py[0m in [0;36mcheck_array[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator)[0m
[1;32m    798[0m [0;34m[0m[0m
[1;32m    799[0m         [0;32mif[0m [0mforce_all_finite[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 800[0;31m             [0m_assert_all_finite[0m[0;34m([0m[0marray[0m[0;34m,[0m [0mallow_nan[0m[0;34m=[0m[0mforce_all_finite[0m [0;34m==[0m [0;34m"allow-nan"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    801[0m [0;34m[0m[0m
[1;32m    802[0m     [0;32mif[0m [0mensure_min_samples[0m [0;34m>[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py[0m in [0;36m_assert_all_finite[0;34m(X, allow_nan, msg_dtype)[0m
[1;32m    120[0m     [0;32melif[0m [0mX[0m[0;34m.[0m[0mdtype[0m [0;34m==[0m [0mnp[0m[0;34m.[0m[0mdtype[0m[0;34m([0m[0;34m"object"[0m[0;34m)[0m [0;32mand[0m [0;32mnot[0m [0mallow_nan[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    121[0m         [0;32mif[0m [0m_object_dtype_isnan[0m[0;34m([0m[0mX[0m[0;34m)[0m[0;34m.[0m[0many[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 122[0;31m             [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"Input contains NaN"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    123[0m [0;34m[0m[0m
[1;32m    124[0m [0;34m[0m[0m

[0;31mValueError[0m: Input contains NaN
ValueError: Input contains NaN

